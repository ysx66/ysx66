name: Compile kernel

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      kernel_sign:
        description: "Set the kernel custom signature"
        required: false
        default: ""
  schedule:
    - cron: 15 21 * * *

env:
  KERNEL_SOURCE: unifreq
  KERNEL_VERSION: 5.4.245_5.10.182_5.15.115_6.1.32
  KERNEL_TOOLCHAIN: gcc
  KERNEL_PACKAGE: all
  KERNEL_AUTO: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_armbian)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Compile the kernel [ ${{ inputs.kernel_version }} ]
        uses: ophub/amlogic-s9xxx-armbian@main
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        with:
          build_target: kernel
          kernel_source: ${{ inputs.kernel_source }}
          kernel_version: ${{ inputs.kernel_version }}
          kernel_auto: ${{ inputs.kernel_auto }}
          kernel_package: ${{ inputs.kernel_package }}
          kernel_sign: ${{ inputs.kernel_sign }}
          kernel_toolchain: ${{ inputs.kernel_toolchain }}

      - name: Upload Kernel to Release
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
        with:
          tag: kernel_stable
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            Flippy 系列固件打包专用内核，支持 Amlogic Allwinner Rockchip 平台。
